#include <stdio.h>
#include <stdlib.h>

int main() {
    int n;

    // طلب حجم السلسلة
    printf("Veuillez saisir la taille maximale de la chaine:\n");
    scanf("%d", &n);

    // تخصيص ذاكرة للنص
    char *chaine = (char *)malloc((n + 1) * sizeof(char));
    if (chaine == NULL) {
        printf("Erreur d'allocation memoire.\n");
        return 1;
    }

    // قراءة النص من المستخدم
    printf("Veuillez saisir la chaine:\n");
    scanf(" "); // لتجاهل المسافة المتبقية من scanf
    for (int i = 0; i < n; i++) {
        char c = getchar();
        if (c == '\n') { // إنهاء الإدخال عند الضغط على Enter
            chaine[i] = '\0';
            break;
        }
        chaine[i] = c;
    }
    chaine[n] = '\0'; // تأكد من انتهاء النص بـ '\0'

    // حساب طول النص
    int longueur = 0;
    while (chaine[longueur] != '\0') {
        longueur++;
    }

    // نسخ النص إلى مصفوفة
    char Tab[longueur + 1];
    for (int i = 0; i < longueur; i++) {
        Tab[i] = chaine[i];
    }
    Tab[longueur] = '\0'; // إنهاء النص

    // عكس النص
    char T[longueur + 1];
    for (int i = 0; i < longueur; i++) {
        T[i] = Tab[longueur - i - 1];
    }
    T[longueur] = '\0'; // إنهاء النص

    // عرض النص الأصلي
    printf("La chaine originale:\n");
    for (int i = 0; i < longueur; i++) {
        printf("%c", Tab[i]);
    }
    printf("\n");

    // عرض النص المعكوس
    printf("La chaine inversée:\n");
    for (int i = 0; i < longueur; i++) {
        printf("%c", T[i]);
    }
    printf("\n");

    // تحرير الذاكرة
    free(chaine);
    return 0;
}
